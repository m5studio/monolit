# Generated by Django 2.2 on 2019-04-12 07:41

import ckeditor.fields
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import location_field.models.plain
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('realty', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок галереи')),
            ],
            options={
                'verbose_name': 'Галерея Объекта',
                'verbose_name_plural': 'Объекты (Фото Галереи этапов строительства)',
            },
        ),
        migrations.CreateModel(
            name='ObjectBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер блока или его название')),
            ],
            options={
                'verbose_name': 'Блок Объекта',
                'verbose_name_plural': 'Объект Блоки',
            },
        ),
        migrations.AlterModelOptions(
            name='object',
            options={'verbose_name': 'Объект', 'verbose_name_plural': 'Объекты (Жилые, Коммерческие)'},
        ),
        migrations.AddField(
            model_name='object',
            name='address',
            field=models.CharField(blank=True, help_text='Город, улица, номер дома (для завершенных/построенных объектов)', max_length=255, null=True, verbose_name='Адрес'),
        ),
        migrations.AddField(
            model_name='object',
            name='category',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('living', 'Жилой'), ('commercial', 'Коммерческий')], help_text='Выберите категорию(и) объекта недвижимости', max_length=17, null=True, verbose_name='Категория объекта'),
        ),
        migrations.AddField(
            model_name='object',
            name='city',
            field=models.CharField(blank=True, choices=[('alushta', 'Алушта'), ('evpatoriya', 'Евпатория'), ('simferopol', 'Симферополь'), ('yalta', 'Ялта')], max_length=100, null=True, verbose_name='Город'),
        ),
        migrations.AddField(
            model_name='object',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='object',
            name='crm_id',
            field=models.CharField(blank=True, help_text='ID объекта в 1C (Заполняется автоматически при выгрузке)', max_length=100, null=True, verbose_name='CRM ID'),
        ),
        migrations.AddField(
            model_name='object',
            name='description',
            field=ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Описание'),
        ),
        migrations.AddField(
            model_name='object',
            name='genplan',
            field=models.ImageField(blank=True, help_text='Изображение с генпланом', null=True, upload_to='realty/objects/genplan/', verbose_name='Генплан'),
        ),
        migrations.AddField(
            model_name='object',
            name='has_military',
            field=models.BooleanField(default=False, help_text='Подходит ли данный объект для военной ипотеки', verbose_name='Военная ипотека'),
        ),
        migrations.AddField(
            model_name='object',
            name='location',
            field=location_field.models.plain.PlainLocationField(blank=True, default='44.952117,34.10241700000006', help_text='Географические координаты - широта и долгота', max_length=63, null=True, verbose_name='Локация'),
        ),
        migrations.AddField(
            model_name='object',
            name='object_type',
            field=models.CharField(blank=True, choices=[('business_center', 'Бизнес центр'), ('city', 'Город'), ('living_house', 'Жилой дом'), ('living_quarter', 'Жилой квартал'), ('living_complex', 'Жилой комплекс'), ('resort_complex', 'Курортный комплекс'), ('multipurposes_complex', 'Многофункциональный комплекс'), ('family_quarter', 'Семейный квартал'), ('business_and_retail_center', 'Торгово-офисный центр'), ('mall', 'Торговый центр')], max_length=100, null=True, verbose_name='Тип Объекта'),
        ),
        migrations.AddField(
            model_name='object',
            name='order',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Чем выше число, тем ниже объект в списке', null=True, verbose_name='Порядок'),
        ),
        migrations.AddField(
            model_name='object',
            name='panoram',
            field=models.URLField(blank=True, help_text='e.g.: https://monolit360.com/files/main/index.html?s=pano1692', null=True, verbose_name='Cсылка на панораму'),
        ),
        migrations.AddField(
            model_name='object',
            name='updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='object',
            name='webcam',
            field=models.URLField(blank=True, help_text='e.g.: https://rtsp.me/embed/3KASrTkG/', null=True, verbose_name='Cсылка на web-камеру'),
        ),
        migrations.AlterField(
            model_name='object',
            name='active',
            field=models.BooleanField(default=True, help_text='Опубликован на сайте', verbose_name='Активный'),
        ),
        migrations.AlterField(
            model_name='object',
            name='completed',
            field=models.BooleanField(default=False, verbose_name='Строительство завершено'),
        ),
        migrations.AlterField(
            model_name='object',
            name='slug',
            field=models.SlugField(help_text='e.g.: status-house (max 100 chars), получим https://monolit.site/objects/status-house/', max_length=100, verbose_name='URL адрес'),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заголовок видео')),
                ('video_url', models.URLField(blank=True, help_text='e.g.: https://youtu.be/JbacFR_B-jw', null=True, verbose_name='Cсылка на видео в YouTube')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('object', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='realty.Object')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
            },
        ),
        migrations.CreateModel(
            name='ObjectSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Номер секции или её название')),
                ('genplan_svg', models.TextField(blank=True, help_text='Выеделение с помощью SVG координат секции на Генплане', null=True, verbose_name='SVG координары выделения секции на Генплане')),
                ('year_of_construction', models.PositiveIntegerField(blank=True, default=2019, help_text='Допустимые значения от 2019 до 2100', null=True, validators=[django.core.validators.MinValueValidator(2019), django.core.validators.MaxValueValidator(2100)], verbose_name='Год сдачи')),
                ('floor_start', models.IntegerField(blank=True, help_text='мин. этаж: -5', null=True, validators=[django.core.validators.MinValueValidator(-5), django.core.validators.MaxValueValidator(0)], verbose_name='Этаж Первый')),
                ('floor_end', models.IntegerField(blank=True, help_text='макс. этаж: 100', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Этаж Последний')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realty.Object', verbose_name='Объект')),
                ('object_block', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.CASCADE, to='realty.ObjectBlock', verbose_name='Блок Объекта')),
            ],
            options={
                'verbose_name': 'Секция Объекта',
                'verbose_name_plural': 'Объекты (Секции)',
            },
        ),
        migrations.CreateModel(
            name='ObjectInfoTab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(blank=True, default=0, help_text='Чем выше число, тем ниже объект в списке', null=True, verbose_name='Порядок')),
                ('name', models.CharField(max_length=100, verbose_name='Название Вкладки')),
                ('icon_name', models.SlugField(blank=True, help_text='e.g.: object-about', max_length=100, null=True, verbose_name='Имя иконки')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/objects/info_tabs/', verbose_name='Изображение')),
                ('object', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='realty.Object')),
            ],
            options={
                'verbose_name': 'Таб [Информация об объекте]',
                'verbose_name_plural': 'Табы [Информация об объекте: О комплексе, Архитектура, Благоустройство, Расположение, Коммуникации, Планировки, Кладовые...]',
            },
        ),
        migrations.CreateModel(
            name='ObjectFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название документа')),
                ('file', models.FileField(blank=True, null=True, upload_to='uploads/objects/files/', verbose_name='Файл')),
                ('object', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='realty.Object')),
            ],
            options={
                'verbose_name': 'Фаил Объекта',
                'verbose_name_plural': 'Файлы Объектов [Информационный буклет, Генплан объекта недвижимости, Коммерческое предложение]',
            },
        ),
        migrations.AddField(
            model_name='objectblock',
            name='object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='realty.Object', verbose_name='Объект'),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='title изображения', max_length=100, null=True)),
                ('alt', models.CharField(blank=True, help_text='alt изображения', max_length=100, null=True)),
                ('image', models.ImageField(upload_to='gallery/', verbose_name='Изображение')),
                ('gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.Gallery', verbose_name='Галерея')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.AddField(
            model_name='gallery',
            name='object',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='realty.Object', verbose_name='Объект'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название документа')),
                ('author', models.CharField(blank=True, max_length=255, null=True, verbose_name='Автор')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Дата')),
                ('file', models.FileField(blank=True, null=True, upload_to='uploads/objects/docs/', verbose_name='Файл')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('object', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='realty.Object')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
    ]
